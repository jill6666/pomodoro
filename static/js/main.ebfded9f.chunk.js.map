{"version":3,"sources":["components/Timer.js","components/TodoListItem.js","components/AddTodo.js","components/TodoList.js","components/Ticking.js","containers/Pomodoro.js","App.js","serviceWorker.js","index.js"],"names":["intervalId","timeId","TodoListItem","_ref","todos","onDelete","onClick","hasLength","Boolean","length","handleOnClick","e","props","preventDefault","react_default","a","createElement","className","style","background","border","boxShadow","src","alt","Fragment","map","todo","_ref2","id","content","padding","key","color","lineHeight","AddTodo","addItem","_useState","useState","_useState2","Object","slicedToArray","setContent","handleOnSubmit","alert","type","value","placeholder","onKeyUp","onChange","target","demoTodoList","TodoList","_ref$updateTask","updateTask","setTodos","components_AddTodo","item","Math","random","newArr","concat","toConsumableArray","components_TodoListItem","targetTodo","filter","Ticking","_ref$time","time","convertedTime","timestamp","minutes","floor","seconds","convertTime","fontSize","initialState","start","percentage","Timer","currentTask","timerState","setTimerState","startIconClass","left","useEffect","reset","setTimeout","stop","clearTimeout","setInterval","prev","objectSpread","clearInterval","audioEl","document","getElementById","play","actionButtons","icon","components_Ticking","opacity","disabled","Pomodoro","setCurrentTask","components_Timer","components_TodoList","task","App","containers_Pomodoro","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ebfded9f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Ticking from \"./Ticking\";\n\nconst initialState = {\n  start: false,\n  time: 1500,\n  percentage: 0,\n};\n\nlet intervalId;\nlet timeId;\n\nconst Timer = ({ currentTask }) => {\n  const [timerState, setTimerState] = useState(initialState);\n  const { start, time, percentage } = timerState;\n\n  const startIconClass = !start ? \"play icon\" : \"pause icon\";\n  const left = `${percentage * 100}%`;\n\n  useEffect(() => {\n    reset();\n  }, [currentTask]);\n\n  useEffect(() => {\n    if (time <= 0) timeId = setTimeout(() => stop(), 500);\n    return () => clearTimeout(timeId);\n  }, [time]);\n\n  useEffect(() => {\n    if (start)\n      intervalId = setInterval(() => {\n        setTimerState((prev) => ({\n          ...prev,\n          time: prev.time - 1,\n          percentage: prev.percentage + 1 / (initialState.time + 1),\n        }));\n      }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [start]);\n\n  const play = () => setTimerState((prev) => ({ ...prev, start: true }));\n  const reset = () => setTimerState(initialState);\n  const stop = () => {\n    const audioEl = document.getElementById(\"audio\");\n    audioEl && audioEl.play();\n\n    reset();\n  };\n\n  const actionButtons = [\n    { icon: startIconClass, onClick: play },\n    { icon: \"stop icon\", onClick: stop },\n  ];\n\n  return (\n    <div className=\"ui center middle aligned grid\">\n      <div className=\"sixteen center aligned wide column\">\n        <Ticking time={time} />\n\n        <div style={{ opacity: currentTask ? 1 : \".3\" }}>\n          <h1 className=\"header\">{currentTask || \"What to do next?\"}</h1>\n\n          {actionButtons.map((item) => (\n            <button\n              className={\"ui massive icon button\"}\n              style={{ background: \"none\", color: \"black\" }}\n              onClick={item.onClick}\n              disabled={!currentTask}\n            >\n              <i className={item.icon}></i>\n            </button>\n          ))}\n        </div>\n\n        <div className=\"ui divider\"></div>\n        <h3>\n          {start && (\n            <>\n              You just started on the road. <br />\n              Keep going!\n            </>\n          )}\n          {!start && (\n            <>\n              Add something from Todo list. <br />\n              Just start the task!\n            </>\n          )}\n        </h3>\n\n        <div className=\"progress-bar-wrapper\">\n          <i className=\"truck icon\" style={{ left }}></i>\n          <div className=\"progress-bar\"></div>\n          <i className=\"flag checkered icon\"></i>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from \"react\";\n\n/**\n *\n * @description todo list item\n * @param {String[]} todos todo list\n * @param {Function} onDelete item on delete\n * @param {Function} onClick item be choosen\n * @returns\n */\nconst TodoListItem = ({ todos, onDelete, onClick }) => {\n  const hasLength = Boolean(todos.length);\n  const handleOnClick = (e, props) => {\n    e.preventDefault();\n    onClick && onClick(props);\n  };\n\n  return (\n    <div className=\"ui big divided list\">\n      {!hasLength && (\n        <div\n          className=\"ui placeholder segment center aligned\"\n          style={{ background: \"none\", border: \"0px\", boxShadow: \"none\" }}\n        >\n          <img\n            src=\"/images/finish.svg\"\n            className=\"ui centered small image\"\n            alt=\"finish\"\n          />\n          <h2>Yay! You don't have any todo task left!</h2>\n        </div>\n      )}\n\n      {hasLength && (\n        <>\n          {todos.map((todo) => {\n            const { id, content } = todo || {};\n\n            return (\n              <div\n                className=\"todo item\"\n                style={{ padding: \"10px 0px\" }}\n                key={id}\n                onClick={(e) => handleOnClick(e, content)}\n              >\n                <div className=\"right floated content\">\n                  <button\n                    className=\"ui big icon button\"\n                    style={{ background: \"none\", color: \"black\" }}\n                    onClick={() => onDelete(id)}\n                  >\n                    <i className=\"trash alternate outline icon\"></i>\n                  </button>\n                </div>\n\n                <div className=\"middle aligned content\">\n                  <h2 style={{ lineHeight: 2 }}>{content}</h2>\n                </div>\n              </div>\n            );\n          })}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TodoListItem;\n","import React, { useState } from \"react\";\n\nconst AddTodo = ({ addItem }) => {\n  const [content, setContent] = useState(null);\n\n  const handleKeyPressed = (e) => {\n    if (e.key === \"Enter\") handleOnSubmit();\n  };\n\n  const handleOnChange = (e) => {\n    const value = e.target.value;\n    setContent(value);\n  };\n  const handleOnSubmit = () => {\n    if (!content) return alert(\"Please input something to create a todo.\");\n\n    addItem && addItem(content);\n    setContent(\"\"); // reset\n  };\n\n  return (\n    <div className=\"ui big fluid action input\">\n      <input\n        type=\"text\"\n        value={content}\n        placeholder=\"Add new todo\"\n        onKeyUp={handleKeyPressed}\n        onChange={handleOnChange}\n      />\n      <button className=\"ui icon black button\" onClick={handleOnSubmit}>\n        <i className=\"plus icon\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React, { useState } from \"react\";\nimport TodoListItem from \"./TodoListItem\";\nimport AddTodo from \"./AddTodo\";\n\nconst demoTodoList = [\n  { id: 1, content: \"Clean Dishes\" },\n  { id: 2, content: \"Buy Groceries\" },\n];\n\nconst TodoList = ({ updateTask = () => {} }) => {\n  const [todos, setTodos] = useState(demoTodoList);\n\n  const onDelete = (id) => {\n    const targetTodo = todos.filter((todo) => todo.id !== id);\n    setTodos(targetTodo);\n  };\n\n  const onAddItem = (item) => {\n    const id = Math.random();\n    const newArr = [...todos, { content: item, id }];\n\n    setTodos(newArr);\n  };\n\n  const onClick = (todo) => {\n    updateTask && updateTask(todo);\n  };\n\n  return (\n    <div style={{ padding: \"2rem 1rem\" }}>\n      <AddTodo addItem={onAddItem} />\n      <TodoListItem todos={todos} onDelete={onDelete} onClick={onClick} />\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\n\nconst Ticking = ({ time = 25 }) => {\n  const convertTime = (timestamp) => {\n    const minutes = Math.floor(timestamp / 60);\n    let seconds = timestamp - minutes * 60;\n\n    if (seconds < 10) seconds = \"0\" + seconds;\n\n    timestamp = minutes + \":\" + seconds;\n    return timestamp;\n  };\n\n  const convertedTime = convertTime(time) || \"-\";\n\n  return (\n    <div className=\"ui huge header center aligned\" style={{ fontSize: \"6rem\" }}>\n      {convertedTime}\n    </div>\n  );\n};\n\nexport default Ticking;\n","import React, { useState } from \"react\";\nimport TodoList from \"../components/TodoList\";\nimport Timer from \"../components/Timer\";\n\nconst Pomodoro = () => {\n  const [currentTask, setCurrentTask] = useState(null);\n\n  const handleUpdateTask = (task) => {\n    setCurrentTask(task);\n  };\n\n  return (\n    <div className=\"ui equal height stackable grid\">\n      <div className=\"eight wide column\" style={{ background: \"yellow\" }}>\n        <Timer currentTask={currentTask} />\n      </div>\n      <div className=\"eight wide column\">\n        <TodoList updateTask={handleUpdateTask} />\n      </div>\n    </div>\n  );\n};\n\nexport default Pomodoro;\n","import React from \"react\";\nimport Pomodoro from \"./containers/Pomodoro\";\n\nfunction App() {\n  return <Pomodoro />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}